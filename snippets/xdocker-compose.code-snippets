{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"docker-compose-template": {
		"prefix": "xtpl",
		"scope": "yaml",
		"body": [
		  "version: '3'",
		  "networks:",
		  "  net1:",
		  "",
		  "volumes:",
		  "  share1:",
		  "",
		  "services:",
		  "  db:",
		  "    image: mysql:5.7.27",
		  "    command: --default-authentication-plugin=mysql_native_password",
		  "    restart: always",
		  "    environment:",
		  "      MYSQL_ROOT_PASSWORD: 123456",
		  "    networks:",
		  "      - net1",
		  "    volumes:",
		  "      - share1:/var/lib/mysql",
		  "",
		  "  adminer:",
		  "    image: adminer",
		  "    restart: always    ",
		  "    networks:",
		  "      - net1    ",
		  "    ports:",
		  "      - 8080:8080",
		  "",
		  "",
		  "# Dockerfile        docker-compose",
		  "# F           -->   build/image",
		  "# A           -->   args/environment",
		  "# R           -->   command/entrypoint",
		  "",
		  "# W           -->   working_dir",
		  "# A            X",
		  "# V           -->   volumes",
		  "# E           -->   ports/networks/network_modes",
		  "",
		  "# volumes:",
		  "#    shared2:",
		  "       # driver: local",
		  "       # driver_opts:",
		  "       #     type: none",
		  "       #     device: /home/alex/vcodes/docker/mysql",
		  "       #     o: bind"
		],
		"description": "docker-compose-template"
	  }

}